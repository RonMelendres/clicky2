{"version":3,"sources":["components/CharacterCards/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/NavBar/index.js","App.js","index.js"],"names":["CharacterCards","props","className","alt","name","src","image","onClick","guessCharacter","id","Wrapper","children","Jumbotron","NavBar","handleIncrement","score","highScore","App","state","characters","alert","success","guessedCharacters","setState","indexOf","push","console","log","shuffleCharacters","count","this","length","i","randIndex","Math","floor","random","tempCharacter","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"8pEAiBeA,MAdf,SAAwBC,GACpB,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAErC,0BAAMC,QAAS,kBAAMN,EAAMO,eAAeP,EAAMQ,KAAKP,UAAU,SAA/D,O,MCFGQ,MAJf,SAAiBT,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCa5BC,MAdf,WACI,OAEI,yBAAKV,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,QAAb,2FCgBDW,MAtBf,SAAgBZ,GACZ,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,gDAEX,4CAEA,yBAAKA,UAAU,+CAA+CO,GAAG,0BAC7D,wBAAIP,UAAU,OACV,wBAAIA,UAAU,WAAWK,QAASN,EAAMa,iBAAxC,UACYb,EAAMc,MADlB,MAGA,wBAAIb,UAAU,WAAWK,QAASN,EAAMa,iBAAxC,gBACkBb,EAAMe,gB,OCyFjCC,E,2MAhGXC,MAAQ,CACJC,aACAJ,MAAO,EACPC,UAAW,EACXI,MAAO,EACPC,QAAS,EACTC,kBAAmB,I,EAGvBd,eAAiB,SAAAC,GACb,IAAIa,EAAoB,EAAKJ,MAAMI,kBAC/BP,EAAQ,EAAKG,MAAMH,MACnBC,EAAY,EAAKE,MAAMF,UAC3B,EAAKO,SAAS,CACVH,MAAO,KAG4B,IAAnCE,EAAkBE,QAAQf,IAC1Ba,EAAkBG,KAAKhB,GACvBiB,QAAQC,IAAIL,GACZ,EAAKR,kBACL,EAAKc,qBACuB,KAArB,EAAKV,MAAMH,MAClB,EAAKQ,SAAS,CACVF,QAAS,EACTN,MAAO,EACPO,kBAAmB,MAGvB,EAAKC,SAAS,CACVR,MAAO,EACPO,kBAAmB,KAEvB,EAAKC,SAAS,CACVH,MAAO,KAGXL,EAAQC,GACR,EAAKO,SAAS,CACVP,UAAWD,K,EAKvBD,gBAAkB,WACd,EAAKS,SAAS,CACVR,MAAO,EAAKG,MAAMH,MAAQ,K,EAIlCa,kBAAoB,WAChB,EAAKT,WAAaA,EAClB,EAAKU,MAAQ,WACT,OAAOC,KAAKX,WAAWY,QAE3B,IAAK,IAAIC,EAAI,EAAKb,WAAWY,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAClD,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IAC5CK,EAAgB,EAAKlB,WAAWa,GACpC,EAAKb,WAAWa,GAAK,EAAKb,WAAWc,GACrC,EAAKd,WAAWc,GAAaI,EAEjC,EAAKd,SAAS,CACVJ,gB,wEAIE,IAAD,OACL,OACI,yBAAKjB,UAAU,aAEX,kBAAC,EAAD,CACIa,MAAOe,KAAKZ,MAAMH,MAClBC,UAAWc,KAAKZ,MAAMF,UACtBF,gBAAiBgB,KAAKhB,kBAG1B,kBAAC,EAAD,MAEA,kBAAC,EAAD,KAEKgB,KAAKZ,MAAMC,WAAWmB,KAAI,SAAAC,GAAS,OAChC,kBAAC,EAAD,CACI/B,eAAgB,EAAKA,eACrBC,GAAI8B,EAAU9B,GACd+B,IAAKD,EAAU9B,GAEfH,MAAOiC,EAAUjC,iB,GAvF3BmC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8445eed3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CharacterStyle.css\";\n\nfunction CharacterCards(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"img-container\">\n                <img alt={props.name} src={props.image} />\n            </div>\n            <span onClick={() => props.guessCharacter(props.id)} className=\"guess\">\n                x\n            </span>\n\n        </div>\n    );\n}\n\nexport default CharacterCards;\n\n","import React from \"react\";\nimport \"./WrapperStyle.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper; ","import React from \"react\";\nimport \"./JumbotronStyle.css\";\n\nfunction Jumbotron() {\n    return (\n        \n        <div className=\"container\">\n            <div className=\"jumbotron\">\n                <h1 className=\"display-4\">Clicky Game</h1>\n                <p className=\"lead\">Click on a character to earn points! However do not choose the same character twice.</p>\n\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Jumbotron;\n\n","import React from \"react\";\n// import App from \"../../App\";\n\nfunction NavBar(props) {\n    return (\n        <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-light\">\n\n                <div>Clicky Game</div>\n\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n                    <ul className=\"nav\">\n                        <li className=\"nav-item\" onClick={props.handleIncrement}>\n                            Score: {props.score} |\n                        </li>\n                        <li className=\"nav-item\" onClick={props.handleIncrement}>\n                            | Top Score: {props.highScore}\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default NavBar\n","import React, { Component } from \"react\";\nimport Characters from \"./components/CharacterCards\";\n// import Shuffle from \"./components/Shuffle\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport NavBar from \"./components/NavBar\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n    state = {\n        characters,\n        score: 0,\n        highScore: 0,\n        alert: 0,\n        success: 0,\n        guessedCharacters: []\n    };\n\n    guessCharacter = id => {\n        let guessedCharacters = this.state.guessedCharacters;\n        let score = this.state.score;\n        let highScore = this.state.highScore;\n        this.setState({\n            alert: 0\n        });\n\n        if (guessedCharacters.indexOf(id) === -1) {\n            guessedCharacters.push(id);\n            console.log(guessedCharacters);\n            this.handleIncrement();\n            this.shuffleCharacters();\n        } else if (this.state.score === 12) {\n            this.setState({\n                success: 1,\n                score: 0,\n                guessedCharacters: []\n            });\n        } else {\n            this.setState({\n                score: 0,\n                guessedCharacters: []\n            });\n            this.setState({\n                alert: 1\n            });\n        };\n        if (score > highScore) {\n            this.setState({\n                highScore: score\n            });\n        };\n    }\n\n    handleIncrement = () => {\n        this.setState({\n            score: this.state.score + 1\n        });\n    };\n\n    shuffleCharacters = () => {\n        this.characters = characters;\n        this.count = function () {\n            return this.characters.length;\n        }\n        for (var i = this.characters.length - 1; i >= 0; i--) {\n            var randIndex = Math.floor(Math.random() * (i + 1));\n            var tempCharacter = this.characters[i];\n            this.characters[i] = this.characters[randIndex];\n            this.characters[randIndex] = tempCharacter;\n        }\n        this.setState({\n            characters\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <NavBar\n                    score={this.state.score}\n                    highScore={this.state.highScore}\n                    handleIncrement={this.handleIncrement}\n                />\n\n                <Jumbotron />\n\n                <Wrapper>\n\n                    {this.state.characters.map(character => (\n                        <Characters\n                            guessCharacter={this.guessCharacter}\n                            id={character.id}\n                            key={character.id}\n                            // name={character.name}\n                            image={character.image} \n                        />\n                    ))}\n\n                </Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}